"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[783],{1783:(e,t,a)=>{a.d(t,{offchainLookup:()=>N,offchainLookupSignature:()=>v});var s=a(4540),r=a(1501),n=a(163),o=a(9197);class c extends n.C{constructor({callbackSelector:e,cause:t,data:a,extraData:s,sender:r,urls:n}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(e=>`    ${(0,o.I)(e)}`)],`  Sender: ${r}`,`  Data: ${a}`,`  Callback selector: ${e}`,`  Extra data: ${s}`].flat(),name:"OffchainLookupError"})}}class i extends n.C{constructor({result:e,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.I)(t)}`,`Response: ${(0,r.A)(e)}`],name:"OffchainLookupResponseMalformedError"})}}class u extends n.C{constructor({sender:e,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}var d=a(6809),l=a(8440),h=a(687),f=a(6907),p=a(7673),w=a(2768),y=a(4153),m=a(1919),b=a(3686),g=a(5355),k=a(5561),x=a(1979),R=a(113);var C=a(3856);const M="/docs/contract/encodeErrorResult";function P(e){const{abi:t,errorName:a,args:s}=e;let r=t[0];if(a){const e=(0,C.iY)({abi:t,args:s,name:a});if(!e)throw new b.yy(a,{docsPath:M});r=e}if("error"!==r.type)throw new b.yy(void 0,{docsPath:M});const n=(0,R.B)(r),o=(0,k.V)(n);let c="0x";if(s&&s.length>0){if(!r.inputs)throw new b.ZP(r.name,{docsPath:M});c=(0,h.h)(r.inputs,s)}return(0,p.aP)([o,c])}const T="/docs/contract/encodeFunctionResult";const E="x-batch-gateway:true";async function O(e){const{data:t,ccipRequest:a}=e,{args:[s]}=function(e){const{abi:t,data:a}=e,s=(0,g.di)(a,0,4),r=t.find(e=>"function"===e.type&&s===(0,k.V)((0,R.B)(e)));if(!r)throw new b.EB(s,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:r.name,args:"inputs"in r&&r.inputs&&r.inputs.length>0?(0,x.n)(r.inputs,(0,g.di)(a,4)):void 0}}({abi:y.b2,data:t}),r=[],n=[];return await Promise.all(s.map(async(e,t)=>{try{n[t]=e.urls.includes(E)?await O({data:e.data,ccipRequest:a}):await a(e),r[t]=!1}catch(o){r[t]=!0,n[t]="HttpRequestError"===(s=o).name&&s.status?P({abi:y.b2,errorName:"HttpError",args:[s.status,s.shortMessage]}):P({abi:[m.Mc],errorName:"Error",args:["shortMessage"in s?s.shortMessage:s.message]})}var s})),function(e){const{abi:t,functionName:a,result:s}=e;let r=t[0];if(a){const e=(0,C.iY)({abi:t,name:a});if(!e)throw new b.Iz(a,{docsPath:T});r=e}if("function"!==r.type)throw new b.Iz(void 0,{docsPath:T});if(!r.outputs)throw new b.MR(r.name,{docsPath:T});const n=(()=>{if(0===r.outputs.length)return[];if(1===r.outputs.length)return[s];if(Array.isArray(s))return s;throw new b.dm(s)})();return(0,h.h)(r.outputs,n)}({abi:y.b2,functionName:"query",result:[r,n]})}const v="0x556f1830",L={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function N(e,{blockNumber:t,blockTag:a,data:r,to:n}){const{args:o}=(0,l.W)({data:r,abi:[L]}),[i,d,w,y,m]=o,{ccipRead:b}=e,g=b&&"function"==typeof b?.request?b.request:S;try{if(!(0,f.h)(n,i))throw new u({sender:i,to:n});const r=d.includes(E)?await O({data:w,ccipRequest:g}):await g({data:w,sender:i,urls:d}),{data:o}=await(0,s.T)(e,{blockNumber:t,blockTag:a,data:(0,p.xW)([y,(0,h.h)([{type:"bytes"},{type:"bytes"}],[r,m])]),to:n});return o}catch(k){throw new c({callbackSelector:y,cause:k,data:r,extraData:m,sender:i,urls:d})}}async function S({data:e,sender:t,urls:a}){let s=new Error("An unknown error occurred.");for(let o=0;o<a.length;o++){const c=a[o],u=c.includes("{data}")?"GET":"POST",l="POST"===u?{data:e,sender:t}:void 0,h="POST"===u?{"Content-Type":"application/json"}:{};try{const a=await fetch(c.replace("{sender}",t.toLowerCase()).replace("{data}",e),{body:JSON.stringify(l),headers:h,method:u});let n;if(n=a.headers.get("Content-Type")?.startsWith("application/json")?(await a.json()).data:await a.text(),!a.ok){s=new d.Ci({body:l,details:n?.error?(0,r.A)(n.error):a.statusText,headers:a.headers,status:a.status,url:c});continue}if(!(0,w.q)(n)){s=new i({result:n,url:c});continue}return n}catch(n){s=new d.Ci({body:l,details:n.message,url:c})}}throw s}}}]);